<div class="container mx-auto p-4">
    <h1 class="text-2xl font-bold mb-4">Synced Calendar Events</h1>

    <div id="calendar" class="bg-white shadow-md rounded-lg p-4"></div>
  </div>

  <div id="eventModal" class="fixed inset-0 bg-gray-800 bg-opacity-75 flex items-center justify-center hidden z-50">
    <div class="bg-white rounded-lg w-11/12 md:w-1/2 lg:w-1/3 p-6 relative z-60">
      <button id="closeModal" class="absolute top-2 right-2 text-gray-500 hover:text-gray-700">
        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
        </svg>
      </button>
      <h2 id="modalTitle" class="text-xl font-semibold mb-4"></h2>
      <div id="modalDescription" class="text-gray-700 mb-4"></div>
      <p id="modalStart" class="text-gray-500 mb-2"></p>
      <p id="modalEnd" class="text-gray-500 mb-2"></p>
      <p id="modalHangoutLink" class="text-blue-500 mb-2"></p>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.8/index.global.min.js"></script>
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      var calendarEl = document.getElementById('calendar');
      var calendar = new FullCalendar.Calendar(calendarEl, {
        initialView: 'dayGridMonth',
        events: function(fetchInfo, successCallback, failureCallback) {
          fetch('/calendar_events.json')
            .then(response => response.json())
            .then(events => {
              console.log("Fetched events: ", events);
              successCallback(events);
            })
            .catch(error => {
              console.error("Error fetching events:", error);
              failureCallback(error);
            });
        },
        headerToolbar: {
          left: 'prev,next today',
          center: 'title',
          right: 'dayGridMonth,timeGridWeek,timeGridDay'
        },
        eventClick: function(info) {
          document.getElementById('modalTitle').textContent = info.event.title || 'No title';
          document.getElementById('modalDescription').innerHTML = info.event.extendedProps.description || 'No description available';
          document.getElementById('modalStart').textContent = 'Start: ' + info.event.startStr;
          document.getElementById('modalEnd').textContent = 'End: ' + info.event.endStr || 'Ongoing';

          var hangoutLink = info.event.extendedProps.hangout_link;
          if (hangoutLink) {
            document.getElementById('modalHangoutLink').innerHTML = `<a href="${hangoutLink}" target="_blank" class="text-blue-500 underline">Join Google Meet</a>`;
          } else {
            document.getElementById('modalHangoutLink').textContent = 'No Meet link available';
          }

          document.getElementById('eventModal').classList.remove('hidden');
          console.log("Modal should be visible");
        }
      });

      calendar.render();

      var closeModalButton = document.getElementById('closeModal');
      var modal = document.getElementById('eventModal');

      closeModalButton.addEventListener('click', function() {
        console.log("Close button clicked");
        modal.classList.add('hidden');
      });

      modal.addEventListener('click', function(event) {
        if (event.target === modal) {
          console.log("Clicked outside modal");
          modal.classList.add('hidden');
        }
      });
    });

  </script>